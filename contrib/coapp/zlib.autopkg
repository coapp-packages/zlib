@import basic.autopkg;
@import @"version.inc";

configurations {
	CallingConvention {
		// the first choice is the default
		// so, unless a choice is made, it will assume the first choice
		choices: { cdecl, stdcall };
	}
		
};

nuget {
	// the nuspec file metadata. Gets created/updated on build
	nuspec {
		id = zlib;
		version : ${package-version};
		title: ZLib compression library;
		authors: {Jean-loup Gailly, Mark Adler, Garrett Serack, Tim Rogers};
		owners: {CoApp Project, Garrett Serack};
		licenseUrl: "http://zlib.net/zlib_license.html";
		projectUrl: "http://github.com/coapp-packages/zlib";
		iconUrl: "http://zlib.net/images/zlib3d-b1.png";
		requireLicenseAcceptance:false;
		summary:A zlib library;
		description: @"A native zlib library.
	zlib homepage:  http://zlib.net";
		releaseNotes: "Release of zlib 1.2.7 libraries.";
		copyright: Copyright 2013;
		tags: { zlib, native, CoApp };

	};

	// the files that go into the content folders
	// (inserted into the nuspec file)
	files {
		include: { ..\..\zlib.h, ..\..\zconf.h };

		docs: {  ..\..\doc\**\* };
    
		[Win32,v110,dynamic,cdecl] { 
			lib: { ..\..\output\v110\win32\release\lib\zlib1.lib };
			bin: { ..\..\output\v110\win32\release\bin\zlib1.dll };
		}

		[x64,v110,dynamic,cdecl] {
			lib: { ..\..\output\v110\x64\release\lib\zlib1.lib };
			bin: { ..\..\output\v110\x64\release\bin\zlib1.dll };
		}
		
		[Win32,v110,static,cdecl] {
			lib: { ..\..\output\v110\win32\release\lib\zlib_static.lib };
		}

		[x64,v110,static,cdecl] {
			lib: { ..\..\output\v110\x64\release\lib\zlib_static.lib };
		}

		[Win32,v110,static,stdcall] {
			lib: { ..\..\output\v110\win32\release\lib\zlib_static_stdcall.lib };
		}

		[x64,v110,static,stdcall] {
			lib: { ..\..\output\v110\x64\release\lib\zlib_static_stdcall.lib };
		}

		[Win32,v110,dynamic,stdcall] {
			lib: { ..\..\output\v110\win32\release\lib\zlib_stdcall.lib };
			bin: { ..\..\output\v110\win32\release\bin\zlib_stdcall.dll };
		}

		[x64,v110,dynamic,stdcall] {
			lib: { ..\..\output\v110\x64\release\lib\zlib_stdcall.lib };
			bin: { ..\..\output\v110\x64\release\bin\zlib_stdcall.dll };
		}

		[Win32,v100,dynamic,cdecl] { 
			lib: { ..\..\output\v100\win32\release\lib\zlib1.lib };
			bin: { ..\..\output\v100\win32\release\bin\zlib1.dll };
		}

		[x64,v100,dynamic,cdecl] {
			lib: { ..\..\output\v100\x64\release\lib\zlib1.lib };
			bin: { ..\..\output\v100\x64\release\bin\zlib1.dll };
		}
		
		[Win32,v100,static,cdecl] {
			lib: { ..\..\output\v100\win32\release\lib\zlib_static.lib };
		}

		[x64,v100,static,cdecl] {
			lib: { ..\..\output\v100\x64\release\lib\zlib_static.lib };
		}

		[Win32,v100,static,stdcall] {
			lib: { ..\..\output\v100\win32\release\lib\zlib_static_stdcall.lib };
		}

		[x64,v100,static,stdcall] {
			lib: { ..\..\output\v100\x64\release\lib\zlib_static_stdcall.lib };
		}

		[Win32,v100,dynamic,stdcall] {
			lib: { ..\..\output\v100\win32\release\lib\zlib_stdcall.lib };
			bin: { ..\..\output\v100\win32\release\bin\zlib_stdcall.dll };
		}

		[x64,v100,dynamic,stdcall] {
			lib: { ..\..\output\v100\x64\release\lib\zlib_stdcall.lib };
			bin: { ..\..\output\v100\x64\release\bin\zlib_stdcall.dll };
		}


	};

	// the VC++ .props file that gets generated and inserted into the ${d_content} folder
	props { 
		// we're going to generate a number of properties anyway. 
        // so even if the packager doesn't specify the props object 
        // we're going to make this file.
	};

	// the VC++ .targets file that gets generated and inserted into the ${d_content} folder
	targets {
		// every configuration needs to reference the include directories.
		Includes += ${pkg_root}${d_include};
		Defines += HAS_ZLIB;
		[dynamic]
			Defines += ZLIB_DLL;
		[stdcall]
			Defines += ZLIB_WINAPI;
			
	};
}

